package x86

// Nop instruction encodes a No Operation instruction with the given length,
// usually used for alignment.
// Source: Intel Software Developer Manual ("Recommended Multi-Byte Sequence of NOP Instruction").
func Nop(code []byte, length int) []byte {
	switch length {
	case 0:
		return code
	case 1:
		return append(code, 0x90)
	case 2:
		return append(code, 0x66, 0x90)
	case 3:
		return append(code, 0x0F, 0x1F, 0x00)
	case 4:
		return append(code, 0x0F, 0x1F, 0x40, 0x00)
	case 5:
		return append(code, 0x0F, 0x1F, 0x44, 0x00, 0x00)
	case 6:
		return append(code, 0x66, 0x0F, 0x1F, 0x44, 0x00, 0x00)
	case 7:
		return append(code, 0x0F, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00)
	case 8:
		return append(code, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00)
	case 9:
		return append(code, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00)
	default:
		code = append(code, 0x66, 0x0F, 0x1F, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00)
		return Nop(code, length-9)
	}
}